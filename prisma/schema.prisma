// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VACANCY_ENUM {
  ON_SITE @map("on-site")
  REMOTE @map("remote")
}

model Firm {
  id String @id @default(uuid()) @db.Uuid
  name String
  location String
  type String
  establishedOn DateTime 
  phoneNumber String @unique
  email String @unique
  password String 
  refreshToken String?
  isVerified Boolean @default(false)
  isDeleted Boolean @default(false)
  profilePic String?
  publicID String?
  vacancies Vacancy[]
  employees User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id String @id @default(uuid()) @db.Uuid
  firstName String
  lastName String
  email String @unique
  password String?
  address String?
  phoneNumber String?
  refreshToken String?
  isVerified Boolean @default(false)
  isDeleted Boolean @default(false)
  profilePic String?
  publicID String?

  provider String?
  providerID String?


  worksAtID String? @db.Uuid
  worksAt Firm? @relation(fields: [worksAtID], references: [id]) 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vacancy {
  id String @id @default(uuid()) @db.Uuid
  title String
  description String
  deadline DateTime
  tags String[]
  type VACANCY_ENUM
  isActive Boolean @default(false)

  firmID String @db.Uuid
  firm Firm @relation(fields: [firmID], references: id)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id String @id @default(uuid()) @db.Uuid
  email String @unique
  firstName String
  lastName String
  password String
  address String?
  phoneNumber String?
  refreshToken String?
  profilePic String?
  publicID String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}